#! /bin/bash

DEVICE="/dev/ttyUSB2"

url_root="https://"
dl_root="/home/${USER}/projects/96boards"

tool="builds.96boards.org/releases/hikey/linaro/binaries/15.11/hisi-idt.py"
loader="builds.96boards.org/releases/hikey/linaro/binaries/15.11/l-loader.bin"
ptable_4gb="builds.96boards.org/releases/hikey/linaro/binaries/15.11/ptable-linux-4g.img"
ptable_8gb="builds.96boards.org/releases/hikey/linaro/binaries/15.11/ptable-linux-8g.img"
fip="builds.96boards.org/releases/hikey/linaro/binaries/15.11/fip.bin"
nvme="builds.96boards.org/releases/hikey/linaro/binaries/15.11/nvme.img"

boot_img="builds.96boards.org/releases/hikey/linaro/debian/15.11/boot-fat.uefi.img"
system_img_4g="builds.96boards.org/releases/hikey/linaro/debian/15.11/hikey-jessie_developer_20151130-387-4g.emmc.img"
system_img_8g="builds.96boards.org/releases/hikey/linaro/debian/15.11/hikey-jessie_developer_20151130-387-8g.emmc.img"

die() {
	echo "(${1}) ERROR: command failed"
	exit 1
}

check_device() {
	if [[ ! -a ${DEVICE} ]]; then
		echo "ERROR: Serial device ${DEVICE} not found!"
		exit 1
	fi
}

jumpers_flash() {
	echo "set jumper AUTO PWR - 1-2 - on"
	echo "set jumper BOOT SEL - 3-4 - on"
	echo "set jumper GPIO3 1  - 5-6 - off"
}

jumpers_fastboot() {
	echo "set jumper AUTO PWR - 1-2 - on"
	echo "set jumper BOOT SEL - 3-4 - off"
	echo "set jumper GPIO3 1  - 5-6 - on"
}

jumpers_boot() {
	echo "set jumper AUTO PWR - 1-2 - on"
	echo "set jumper BOOT SEL - 3-4 - off"
	echo "set jumper GPIO3 1  - 5-6 - off"
}

usage() {
	echo "program-hikey" >&2
	echo "OPTIONS" >&2
	echo "     -a (y|n), --autoboot=(y|n)" >&2
	echo "             Set UEFI autoboot on." >&2
	echo "     -b, --boot" >&2
	echo "             Program the eMMC boot partition (boot)." >&2
	echo "     -d, -download" >&2
	echo "             Download files from Internet." >&2
	echo "     -f, --firmware" >&2
	echo "             Program the eMMC firmware partitions (ptable, fastboot, nvme, mcuimage)." >&2
	echo "     -h, --help" >&2
	echo "             Print a help message." >&2
	echo "     -s, --system" >&2
	echo "             Program the eMMC system partition (system)." >&2
	echo "     -8, --8gb" >&2
	echo "             Program for 8GiB system (default = ${size})." >&2
	echo "HINT" >&2
	echo "     wget -e robots=off --recursive --page-requisites --convert-links --no-parent \\" >&2
	echo "     'https://builds.96boards.org/releases/hikey/linaro/binaries/...'" >&2

	exit 1
}

autoboot=""
boot="n"
download="n"
fw="n"
system="n"
size="4g"

if [[ $# -eq 0 ]]; then
	usage
fi

while [[ $# -gt 0 ]]; do
	case "$1" in
	-a)
		shift
		case "$1" in
		y)
			autoboot="y"
			;;
		n)
			autoboot="n"
			;;
		*)
			echo "Bad autoboot: $1" >&2
			usage
			;;
		esac
		;;
	--autoboot=y)
		autoboot="y"
		;;
	--autoboot=n)
		autoboot="n"
		;;
	-b | --boot)
		boot="y"
		;;
	-d | --download)
		download="y"
		;;
	-f | --firmware)
		fw="y"
		;;
	-s | --system)
		system="y"
		;;
	-8 | --8gb)
		size="8g"
		;;
	*)
		usage
		;;
	esac
	shift
done

if [[ "${size}" == "4g" ]]; then
	ptable=${ptable_4gb}
	system_img=${system_img_4g}
elif [[ "${size}" == "8g" ]]; then
	ptable=${ptable_8gb}
	system_img=${system_img_8g}
else
	die $LINENO
fi

if [[ "${download}" == "y" ]]; then
	for item in ${tool} ${loader} ${ptable} ${fip} ${nvme} "${boot_img}.gz" "${system_img}.gz"; do
		echo "Download ${url_root}${item}: "
		mkdir -p $(dirname "${dl_root}/${item}") || die $LINENO
		curl --progress-bar ${url_root}${item} -o ${dl_root}/${item} || die $LINENO
	done

	for item in "${boot_img}" "${system_img}"; do
		echo "Extracting ${dl_root}/${item}"
		gunzip --keep --force "${dl_root}/${boot_img}.gz"
	done

	for item in ${tool} ${loader} ${ptable} ${fip} ${nvme} "${boot_img}.gz" "${system_img}.gz"; do
		md5sum ${dl_root}/${item} || die $LINENO
	done

	echo "Download complete, ready to program."
	exit
fi

if [[ "${fw}" == "y" ]]; then
	jumpers_flash
	echo "Writing firmware"
	check_device
	sudo python "${dl_root}/${tool}" -d ${DEVICE} --img1="${dl_root}/${loader}" || die $LINENO
	sleep 2
	sudo fastboot flash ptable "${dl_root}/${ptable}" || die $LINENO
	sudo fastboot flash fastboot "${dl_root}/${fip}" || die $LINENO
	sudo fastboot flash nvme "${dl_root}/${nvme}" || die $LINENO
fi

if [[ "${boot}" == "y" ]]; then
	[[ "${fw}" == "y" ]] || jumpers_fastboot
	echo "Writing boot image"
	sudo fastboot flash boot "${dl_root}/${boot_img}" || die $LINENO
fi

if [[ "${system}" == "y" ]]; then
	[[ "${fw}" == "y"  || "${boot}" == "y" ]] || jumpers_fastboot
	echo "Writing system image"
	sudo fastboot flash system "${dl_root}/${system_img}" || die $LINENO
fi

if [[ "${autoboot}" == "y" ]]; then
	[[ "${fw}" == "y"  || "${boot}" == "y" || "${system}" == "y" ]] || jumpers_fastboot
	echo "Setting autoboot: on"
	sudo fastboot oem autoboot 1 || die $LINENO
fi

if [[ "${autoboot}" == "n" ]]; then
	[[ "${fw}" == "y"  || "${boot}" == "y" || "${system}" == "y" ]] || jumpers_fastboot
	echo "Setting autoboot: off"
	sudo fastboot oem autoboot 0 || die $LINENO
fi

sudo fastboot reboot

jumpers_boot
